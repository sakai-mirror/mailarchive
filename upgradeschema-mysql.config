# UpgradeSchema Control File (Default)
# Conversion needs the database connection details
dbDriver=com.mysql.jdbc.Driver

dbUrl=jdbc:mysql://localhost:3306/sakai?useUnicode=true&characterEncoding=UTF-8
dbUser=sakaiuser
dbPassword=sakaipassword

# dbURL=PUT_YOUR_URL_HERE
# dbUser=PUT_YOUR_USERNAME_HERE
# dbPass=PUT_YOUR_PASSWORD_HERE

convert.0=ExtractXMLToColumns
convert.0.handler.class=org.sakaiproject.mailarchive.impl.conversion.ExtractXMLToColumns
convert.0.create.migrate.table.count=3
convert.0.create.migrate.table.0=create table mailarchive_xml_extract ( id varchar(1024), status varchar(99) )
convert.0.create.migrate.table.1=create unique index mailarchive_xml_extract_id_idx on mailarchive_xml_extract(id)
convert.0.create.migrate.table.2=create index mailarchive_xml_extract_status_idx on mailarchive_xml_extract(status)
convert.0.drop.migrate.table=drop table mailarchive_xml_extract
convert.0.check.migrate.table=select count(*) from mailarchive_xml_extract  where status <> 'done'
convert.0.select.next.batch=select id from mailarchive_xml_extract where status = 'pending' limit 100
convert.0.complete.next.batch=update mailarchive_xml_extract set status = 'done' where id = ?
convert.0.mark.next.batch=update mailarchive_xml_extract set status = 'locked' where id = ?
convert.0.populate.migrate.table=insert into mailarchive_xml_extract (id,status) select MESSAGE_ID, 'pending' from MAILARCHIVE_MESSAGE where ( SUBJECT IS NULL and BODY IS NULL and HTMLBODY IS NULL ) 
convert.0.select.record=select XML from MAILARCHIVE_MESSAGE where MESSAGE_ID = ?
convert.0.select.validate.record=select SUBJECT from MAILARCHIVE_MESSAGE where MESSAGE_ID = ?
convert.0.update.record=update MAILARCHIVE_MESSAGE set SUBJECT = ?, BODY = ?, HTMLBODY = ?  where MESSAGE_ID = ?
convert.0.new.columns.names=SUBJECT,BODY,HTMLBODY
convert.0.new.columns.types=VARCHAR(255),LONGTEXT,LONGTEXT
convert.0.new.columns.qualifiers=null, null, null
convert.0.new.columns.add=alter table MAILARCHIVE_MESSAGE add <name> <type> <qualifier>
convert.0.new.columns.test=show columns from MAILARCHIVE_MESSAGE like '<name>'
convert.0.early.termination.signal=quit.txt

## convert to binary-entity serialization for content_collection table
## comment out this step unless you are switching from XML to binary-entity serialization

#convert.1=Type1BlobCollectionConversion
#convert.1.handler.class=org.sakaiproject.content.impl.serialize.impl.conversion.Type1BlobCollectionConversionHandler
#convert.1.create.migrate.table.count=3
#convert.1.create.migrate.table.0=create table content_col_t1register ( id varchar(1024), status varchar(99) )
#convert.1.create.migrate.table.1=create unique index content_col_t1register_id_idx on content_col_t1register(id)
#convert.1.create.migrate.table.2=create index content_col_t1register_status_idx on content_col_t1register(status)
#convert.1.drop.migrate.table=drop table content_col_t1register
#convert.1.check.migrate.table=select count(*) from content_col_t1register  where status <> 'done'
#convert.1.select.next.batch=select id from content_col_t1register where status = 'pending' limit 100
#convert.1.complete.next.batch=update content_col_t1register set status = 'done' where id = ?
#convert.1.mark.next.batch=update content_col_t1register set status = 'locked' where id = ?
##convert.1.populate.migrate.table=insert into content_col_t1register (id,status) select COLLECTION_ID, 'pending' from CONTENT_COLLECTION where BINARY_ENTITY IS NULL
#convert.1.select.record=select XML from CONTENT_COLLECTION where COLLECTION_ID = ?
#convert.1.select.validate.record=select BINARY_ENTITY from CONTENT_COLLECTION where COLLECTION_ID = ?
#convert.1.update.record=update CONTENT_COLLECTION set XML = NULL, BINARY_ENTITY = ?  where COLLECTION_ID = ?
#convert.1.new.columns.names=BINARY_ENTITY
#convert.1.new.columns.types=BLOB
#convert.1.new.columns.qualifiers=default null
#convert.1.new.columns.add=alter table CONTENT_COLLECTION add <name> <type> <qualifier>
#convert.1.new.columns.test=show columns from CONTENT_COLLECTION like '<name>'
#convert.1.early.termination.signal=quit.txt
